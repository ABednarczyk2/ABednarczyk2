

> library(readxl)
> J341967 <- read_excel("C:/Users/2022/Desktop/gravity/THESIS/J341967.xlsx")
> View(J341967)
> data<-read_excel("C:/Users/2022/Desktop/gravity/THESIS/J341967.xlsx")

> library(dplyr)
> 
> # failed to change names whatever 
> column_mapping <- c(
+    ER66001 = "RELEASE NUMBER",
+    ER66002 = "2017 FAMILY INTERVIEW (ID) NUMBER",
+    ER66048 = "A23 HAVE MORTGAGE?",
+    ER66051 = "A24 REM PRINCIPAL MOR 1",
+    ER66069 = "A28 2ND MORTGAGE",
+    ER66072 = "A24 REM PRINCIPAL MOR 2",
+    ER71426 = "TOTAL FAMILY INCOME-2016",
+    ER71492 = "MORTGAGE EXPENDITURE 2017",
+    ER71494 = "RENT EXPENDITURE 2017",
+    ER71527B = "TOTAL EXPENDITURE",
+    ER71571 = "2017 CROSS-SECTIONAL FAMILY WEIGHT",
+    ER72001 = "RELEASE NUMBER",
+    ER72002 = "2019 FAMILY INTERVIEW (ID) NUMBER",
+    ER72048 = "A23 HAVE MORTGAGE?",
+    ER72051 = "A24 REM PRINCIPAL MOR 1",
+    ER72072 = "A24 REM PRINCIPAL MOR 2",
+    ER77448 = "TOTAL FAMILY INCOME-2018",
+    ER77521 = "MORTGAGE EXPENDITURE 2019",
+    ER77525 = "RENT EXPENDITURE 2019",
+    ER77587 = "TOTAL EXPENDITURE",
+    ER77631 = "2019 CORE/IMMIGRANT FAM WEIGHT NUMBER 1",
+    ER77632 = "2019 CROSS-SECTIONAL FAMILY WEIGHT",
+    ER78001 = "RELEASE NUMBER",
+    ER78002 = "2021 FAMILY INTERVIEW (ID) NUMBER",
+    ER78049 = "A23 HAVE MORTGAGE?",
+    ER78052 = "A24 REM PRINCIPAL MOR 1",
+    ER78073 = "A24 REM PRINCIPAL MOR 2",
+    ER81775 = "TOTAL FAMILY INCOME-2020",
+    ER81848 = "MORTGAGE EXPENDITURE 2021",
+    ER81852 = "RENT EXPENDITURE 2021",
+    ER81914 = "TOTAL EXPENDITURE",
+    ER81958 = "2021 CORE/IMMIGRANT FAM WEIGHT NUMBER 1"
+ )
> 

> # remove idk answers
> principal_columns <- c(
+    "ER66051", "ER66072",  # For 2017
+    "ER72051", "ER72072",  # For 2019
+    "ER78052", "ER78073"   # For 2021
+ )
> 
> # Replace 9999999 and 9999998 with NA in the specified columns
> data <- data %>%
+    mutate(across(all_of(principal_columns), ~ na_if(.x, 9999999))) %>%
+    mutate(across(all_of(principal_columns), ~ na_if(.x, 9999998)))
> 
> # consumption w/o housing
> data <- data %>%
+    mutate(
+        consumption17 = ER71527B - (ER71492 + ER71494),  # 2017: Total expenditure - (Mortgage + Rent)
+        consumption19 = ER77587 - (ER77521 + ER77525),  # 2019: Total expenditure - (Mortgage + Rent)
+        consumption21 = ER81914 - (ER81848 + ER81852)   # 2021: Total expenditure - (Mortgage + Rent)
+    )

> # total mortgage year by year
> data <- data %>%
+    mutate(
+        totmort17 = ER66051 + ER66072,  # 2017: Sum of two mortgage columns
+        totmort19 = ER72051 + ER72072,  # 2019: Sum of two mortgage columns
+        totmort21 = ER78052 + ER78073   # 2021: Sum of two mortgage columns
+    )
> 

> # binary variables indicating nonzero mortgage totals im not sure if i need it
> data <- data %>%
+    mutate(
+        mort17yes1 = ifelse(totmort17 > 0, 1, 0),  # 1 if totmort17 > 0, else 0
+        mort19yes1 = ifelse(totmort19 > 0, 1, 0),  # 1 if totmort19 > 0, else 0
+        mort21yes1 = ifelse(totmort21 > 0, 1, 0)   # 1 if totmort21 > 0, else 0
+    )
> 
> #  CPI values from dallasfed idk it was available
> CPI_2017 <- 243.9
> CPI_2019 <- 254.2
> CPI_2021 <- 264.8
> 
> # deflate consumption values to 2021 CPI
> data <- data %>%
+    mutate(
+        consumption17_deflated = consumption17 * (CPI_2021 / CPI_2017),
+        consumption19_deflated = consumption19 * (CPI_2021 / CPI_2019)
+    )
> 
> 
> data <- data %>%
+    mutate(
+        deltacons21 = consumption21 - consumption19_deflated,  # change from 2019 to 2021
+        deltacons19 = consumption19_deflated - consumption17_deflated  # change from 2017 to 2019
+    )
> 
> # CPI values
> CPI_2017 <- 243.9
> CPI_2019 <- 254.2
> CPI_2021 <- 264.8
> 
> # deflate totmort values to 2021 CPI
> data <- data %>%
+    mutate(
+        totmort17_deflated = totmort17 * (CPI_2021 / CPI_2017),
+        totmort19_deflated = totmort19 * (CPI_2021 / CPI_2019),
+        totmort21_deflated = totmort21  # already in 2021 CPI, no need to adjust
+    )
> 
> data <- data %>%
+    mutate(
+        deltamort21 = totmort21_deflated - totmort19_deflated,  # change from 2019 to 2021
+        deltamort19 = totmort19_deflated - totmort17_deflated  # change from 2017 to 2019
+    )
> 
> data <- data %>%
+    rename(
+        income17 = ER71426,
+        income19 = ER77448,
+        income21 = ER81775
+    )
> 

> # deflate income values to 2021 CPI
> data <- data %>%
+    mutate(
+        income17_deflated = income17 * (254.2 / 238.2),  # deflate income17 to 2021
+        income19_deflated = income19 * (254.2 / 243.9),  # deflate income19 to 2021
+        income21_deflated = income21                     # income21 already in 2021 CPI
+    )
> 
> data <- data %>%
+    mutate(
+        deltaincome21 = income21_deflated - income19_deflated,  # Change from 2019 to 2021
+        deltaincome19 = income19_deflated - income17_deflated  # Change from 2017 to 2019
+    )
> 
> # Create the interaction terms
> data <- data %>%
+    mutate(
+        interaction_mort21 = deltaincome21 * deflatedmort21,
+        interaction_mort19 = deltaincome21 * deflatedmort19
+    )
Error in `mutate()`:
ℹ In argument: `interaction_mort21 = deltaincome21 * deflatedmort21`.
Caused by error:
! object 'deflatedmort21' not found
Run `rlang::last_trace()` to see where the error occurred.
> View(data)
> # Deflate income values to 2021 CPI
> data <- data %>%
+    mutate(
+        income17_deflated = income17 * (254.2 / 238.2),  # Deflate income17 to 2021
+        income19_deflated = income19 * (254.2 / 243.9),  # Deflate income19 to 2021
+        income21_deflated = income21                     # income21 already in 2021 CPI
+    )
> 
> data <- data %>%
+    mutate(
+        deltaincome21 = income21_deflated - income19_deflated,  # Change from 2019 to 2021
+        deltaincome19 = income19_deflated - income17_deflated  # Change from 2017 to 2019
+    )
> 
> # Make sure dplyr is loaded
> library(dplyr)
> 
> # Deflate income values to 2021 CPI
> data <- data %>%
+    mutate(
+        income17_deflated = income17 * (254.2 / 238.2),  # Deflate income17 to 2021 CPI
+        income19_deflated = income19 * (254.2 / 243.9),  # Deflate income19 to 2021 CPI
+        income21_deflated = income21                      # income21 already in 2021 CPI
+    )
> 
> colnames(data)
 [1] "ER66001"                "ER66002"                "ER66048"                "ER66051"               
 [5] "ER66069"                "ER66072"                "income17"               "ER71492"               
 [9] "ER71494"                "ER71527B"               "ER71571"                "ER72001"               
[13] "ER72002"                "ER72048"                "ER72051"                "ER72072"               
[17] "income19"               "ER77521"                "ER77525"                "ER77587"               
[21] "ER77631"                "ER77632"                "ER78001"                "ER78002"               
[25] "ER78049"                "ER78052"                "ER78073"                "income21"              
[29] "ER81848"                "ER81852"                "ER81914"                "ER81958"               
[33] "consumption17"          "consumption19"          "consumption21"          "totmort17"             
[37] "totmort19"              "totmort21"              "mort17yes1"             "mort19yes1"            
[41] "mort21yes1"             "consumption17_deflated" "consumption19_deflated" "deltacons21"           
[45] "deltacons19"            "totmort17_deflated"     "totmort19_deflated"     "totmort21_deflated"    
[49] "deltamort21"            "deltamort19"            "income17_deflated"      "income19_deflated"     
[53] "income21_deflated"      "deltaincome21"          "deltaincome19"         
> 
> # Fit the OLS model with interaction terms
> model <- lm(deltacons21 ~ deltaincome21 * totmort21_deflated + deltaincome21 * totmort19_deflated, data = data)
> 
> # Summarize the model
> summary(model)

Call:
lm(formula = deltacons21 ~ deltaincome21 * totmort21_deflated + 
    deltaincome21 * totmort19_deflated, data = data)

Residuals:
    Min      1Q  Median      3Q     Max 
-644441   -8372     193    8394  350436 

Coefficients:
                                   Estimate Std. Error t value Pr(>|t|)    
(Intercept)                      -7.401e+02  2.901e+02  -2.551  0.01076 *  
deltaincome21                     3.741e-02  5.729e-03   6.529 7.03e-11 ***
totmort21_deflated                3.375e-02  3.078e-03  10.963  < 2e-16 ***
totmort19_deflated               -3.763e-02  3.233e-03 -11.642  < 2e-16 ***
deltaincome21:totmort21_deflated -6.621e-09  2.146e-09  -3.085  0.00204 ** 
deltaincome21:totmort19_deflated -5.909e-09  1.759e-08  -0.336  0.73699    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 22730 on 7811 degrees of freedom
  (3874 observations deleted due to missingness)
Multiple R-squared:  0.03652,	Adjusted R-squared:  0.0359 
F-statistic: 59.21 on 5 and 7811 DF,  p-value: < 2.2e-16

> 
> model2 <- lm(deltacons19 ~ deltaincome19 * totmort19_deflated + deltaincome19 * totmort17_deflated, data = data)
> summary(model2)

Call:
lm(formula = deltacons19 ~ deltaincome19 * totmort19_deflated + 
    deltaincome19 * totmort17_deflated, data = data)

Residuals:
    Min      1Q  Median      3Q     Max 
-483474   -7917    -484    7604  299804 

Coefficients:
                                   Estimate Std. Error t value Pr(>|t|)    
(Intercept)                       7.195e+02  2.567e+02   2.803 0.005076 ** 
deltaincome19                     2.601e-02  4.673e-03   5.567 2.68e-08 ***
totmort19_deflated                3.660e-02  3.456e-03  10.589  < 2e-16 ***
totmort17_deflated               -3.347e-02  3.529e-03  -9.483  < 2e-16 ***
deltaincome19:totmort19_deflated  1.492e-07  4.425e-08   3.371 0.000754 ***
deltaincome19:totmort17_deflated -1.525e-07  4.417e-08  -3.452 0.000560 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 20410 on 8048 degrees of freedom
  (3637 observations deleted due to missingness)
Multiple R-squared:  0.02496,	Adjusted R-squared:  0.02435 
F-statistic:  41.2 on 5 and 8048 DF,  p-value: < 2.2e-16

> # For Model 1: Change from 2021 to 2019
> cooksd_model1 <- cooks.distance(model1)
> 
> # For Model 2: Change from 2019 to 2017
> cooksd_model2 <- cooks.distance(model2)
> 
> # Plot Cook's Distance for Model 1
> plot(cooksd_model1, main = "Cook's Distance for Model 1 (2021-2019)", ylab = "Cook's Distance", type = "h", col = "blue")
> abline(h = 4 / length(cooksd_model1), col = "red")  # Cutoff threshold for influential points
> 
> # Plot Cook's Distance for Model 2
> plot(cooksd_model2, main = "Cook's Distance for Model 2 (2019-2017)", ylab = "Cook's Distance", type = "h", col = "green")
> abline(h = 4 / length(cooksd_model2), col = "red")  # Cutoff threshold for influential points
> 
> # Identify influential points for Model 1
> influential_points_model1 <- which(cooksd_model1 > 4 / length(cooksd_model1))
> print(influential_points_model1)
   6   35   40   48   66   68   74   96  131  133  140  141  164  186  193  263  269  271  276  280  284 
   6   35   40   48   66   68   74   96  131  133  140  141  163  185  192  261  267  269  274  278  282 
 303  313  322  330  337  343  356  365  392  395  397  401  412  432  436  443  478  504  508  510  514 
 301  310  319  327  334  339  352  361  388  391  393  397  408  428  432  439  473  499  503  505  509 
 543  562  568  569  573  575  578  581  587  596  640  696  704  707  711  715  724  725  733  734  746 
 538  556  562  563  567  569  572  575  581  590  633  689  697  699  703  707  716  717  725  726  738 
 747  752  753  769  770  772  779  780  822  847  853  856  858  883  899  907  910  916  919  930  953 
 739  744  745  761  762  764  771  772  812  837  843  846  848  872  888  896  899  905  908  919  942 
 954  964  973  978  982 1002 1007 1024 1039 1047 1058 1080 1082 1092 1100 1108 1124 1126 1143 1161 1165 
 943  952  961  966  970  990  995 1012 1026 1034 1045 1067 1069 1079 1087 1095 1111 1113 1129 1147 1151 
1169 1198 1200 1213 1215 1216 1234 1244 1245 1253 1262 1266 1268 1274 1278 1279 1293 1298 1313 1333 1334 
1155 1184 1186 1199 1201 1202 1220 1230 1231 1239 1248 1252 1254 1260 1264 1265 1279 1284 1299 1319 1320 
1341 1349 1354 1355 1356 1358 1359 1397 1402 1414 1420 1422 1435 1439 1461 1462 1474 1496 1498 1518 1521 
1327 1335 1340 1341 1342 1344 1345 1383 1388 1399 1405 1407 1420 1424 1446 1447 1459 1481 1483 1503 1506 
1537 1540 1547 1549 1570 1576 1618 1636 1638 1642 1651 1663 1665 1668 1679 1683 1701 1705 1706 1707 1708 
1522 1525 1532 1534 1555 1561 1602 1620 1622 1626 1635 1647 1649 1652 1663 1667 1685 1689 1690 1691 1692 
1720 1724 1742 1757 1761 1765 1794 1806 1811 1839 1842 1844 1845 1860 1884 1886 1915 1918 1925 1929 1968 
1704 1708 1726 1741 1745 1749 1777 1789 1794 1822 1825 1827 1828 1843 1867 1869 1898 1901 1908 1912 1951 
1976 1996 2009 2011 2014 2016 2024 2025 2036 2039 2040 2041 2044 2052 2058 2062 2068 2078 2080 2081 2083 
1959 1979 1992 1994 1997 1999 2007 2008 2017 2020 2021 2022 2025 2033 2039 2043 2049 2059 2061 2062 2064 
2086 2092 
2067 2073 
> 
> # Identify influential points for Model 2
> influential_points_model2 <- which(cooksd_model2 > 4 / length(cooksd_model2))
> print(influential_points_model2)
   23    49    74   120   134   165   173   184   185   189   223   322   374   375   384   400   470 
   14    33    50    77    87   103   107   113   114   116   143   215   250   251   258   272   328 
  475   493   561   566   595   611   622   686   698   699   700   701   702   769   771   773   776 
  331   345   391   394   412   421   430   470   476   477   478   479   480   522   523   525   527 
  781   817   818   844   853   897   913   971  1033  1046  1051  1069  1076  1079  1084  1088  1099 
  531   556   557   579   586   619   628   661   708   717   721   737   743   744   748   751   756 
 1156  1181  1189  1215  1392  1398  1463  1470  1548  1553  1562  1584  1609  1642  1645  1708  1744 
  795   810   817   832   957   963  1001  1005  1065  1070  1078  1095  1118  1144  1145  1190  1217 
 1759  1770  1771  1779  1835  1844  1845  1854  1867  1876  1884  1888  1921  1928  1959  1979  1992 
 1226  1233  1234  1241  1282  1288  1289  1298  1309  1314  1318  1322  1344  1349  1375  1388  1394 
 1996  1998  2004  2030  2067  2106  2123  2126  2156  2175  2195  2213  2220  2260  2335  2340  2363 
 1396  1398  1404  1425  1451  1473  1485  1488  1508  1523  1538  1551  1556  1580  1629  1633  1650 
 2373  2380  2445  2456  2478  2479  2498  2499  2517  2520  2544  2567  2572  2591  2594  2605  2607 
 1658  1662  1706  1714  1731  1732  1747  1748  1763  1766  1781  1800  1803  1811  1813  1821  1823 
 2630  2642  2644  2645  2652  2653  2663  2672  2687  2697  2713  2727  2753  2790  2800  2805  2833 
 1842  1850  1852  1853  1859  1860  1867  1870  1881  1889  1898  1906  1925  1951  1958  1963  1984 
 2852  2894  3017  3095  3098  3129  3136  3187  3188  3289  3294  3335  3339  3340  3345  3354  3357 
 1999  2032  2129  2187  2190  2209  2215  2247  2248  2330  2333  2354  2356  2357  2362  2369  2370 
 3358  3411  3421  3423  3553  3581  3596  3625  3627  3631  3663  3716  3726  3732  3738  3742  3791 
 2371  2406  2412  2413  2500  2516  2525  2549  2551  2554  2574  2605  2610  2615  2620  2623  2655 
 3927  3928  3929  3989  4090  4091  4094  4175  4200  4223  4277  4296  4300  4418  4435  4449  4460 
 2756  2757  2758  2804  2879  2880  2883  2936  2956  2975  3018  3029  3032  3119  3133  3145  3153 
 4488  4498  4500  4501  4505  4507  4517  4536  4559  4574  4585  4588  4595  4600  4601  4604  4613 
 3170  3179  3181  3182  3185  3186  3192  3207  3221  3234  3242  3245  3250  3253  3254  3257  3265 
 4647  4702  4708  4721  4739  4741  4761  4771  4788  4837  4838  4880  4881  4907  4938  4941  5003 
 3287  3330  3336  3345  3354  3356  3368  3374  3387  3422  3423  3454  3455  3472  3492  3494  3539 
 5056  5091  5120  5188  5212  5224  5255  5290  5292  5404  5465  5476  5544  5567  5631  5657  5659 
 3578  3599  3623  3672  3688  3691  3710  3739  3741  3814  3856  3860  3914  3936  3981  4000  4002 
 5662  5664  5672  5673  5675  5691  5695  5732  5747  5769  5830  5831  5836  5986  6050  6067  6086 
 4003  4004  4009  4010  4011  4020  4023  4045  4054  4070  4108  4109  4114  4206  4248  4263  4277 
 6142  6165  6166  6186  6226  6227  6245  6276  6277  6278  6307  6308  6357  6429  6435  6440  6452 
 4317  4333  4334  4343  4373  4374  4387  4409  4410  4411  4431  4432  4467  4515  4519  4524  4533 
 6471  6511  6525  6531  6536  6541  6570  6580  6593  6606  6629  6846  6884  6901  6971  7000  7023 
 4548  4575  4582  4586  4589  4593  4613  4619  4626  4633  4649  4773  4800  4808  4858  4876  4887 
 7098  7127  7142  7150  7163  7193  7273  7329  7495  7512  7583  7619  7715  7750  8147  8210  8211 
 4934  4954  4965  4969  4979  5002  5055  5098  5213  5224  5269  5292  5352  5372  5606  5655  5656 
 8223  8295  8474  8559  8973  9112  9351  9353  9367  9396  9416  9439  9445  9511  9622  9640 10041 
 5665  5721  5850  5915  6209  6306  6479  6481  6491  6513  6529  6542  6545  6593  6673  6687  6941 
10157 10209 10453 10689 10959 10970 11000 11141 11301 11358 11359 11363 11497 11533 11666 11677 
 7016  7054  7215  7379  7562  7569  7590  7687  7792  7836  7837  7840  7927  7947  8039  8047 
> 
> # Remove the influential points from the data for Model 1
> data_no_influential <- data[-influential_points_model1, ]
> 
> # Refit the model (OLS) without the influential points
> model11 <- lm(deltacons21 ~ deltaincome21 + totmort21_deflated + totmort19_deflated +
+                  deltaincome21:totmort21_deflated + deltaincome21:totmort19_deflated, 
+              data = data_no_influential)
> 
> # Summary of the new model
> summary(model11)

Call:
lm(formula = deltacons21 ~ deltaincome21 + totmort21_deflated + 
    totmort19_deflated + deltaincome21:totmort21_deflated + deltaincome21:totmort19_deflated, 
    data = data_no_influential)

Residuals:
    Min      1Q  Median      3Q     Max 
-644305   -8377     186    8389  350453 

Coefficients:
                                   Estimate Std. Error t value Pr(>|t|)    
(Intercept)                      -7.490e+02  2.936e+02  -2.551  0.01075 *  
deltaincome21                     3.727e-02  5.793e-03   6.435 1.31e-10 ***
totmort21_deflated                3.390e-02  3.135e-03  10.814  < 2e-16 ***
totmort19_deflated               -3.789e-02  3.282e-03 -11.546  < 2e-16 ***
deltaincome21:totmort21_deflated -6.560e-09  2.181e-09  -3.008  0.00264 ** 
deltaincome21:totmort19_deflated -2.353e-09  1.819e-08  -0.129  0.89708    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 22790 on 7666 degrees of freedom
  (3807 observations deleted due to missingness)
Multiple R-squared:  0.03713,	Adjusted R-squared:  0.03651 
F-statistic: 59.13 on 5 and 7666 DF,  p-value: < 2.2e-16

> 
> # Remove influential points from Model 2 dataset
> model2_data_clean <- model2_data[-influential_points_model2, ]
Error: object 'model2_data' not found
> # Remove influential points from Model 2 dataset
> model2_data_clean <- model2[-influential_points_model2, ]
Error in model2[-influential_points_model2, ] : 
  incorrect number of dimensions
> # Remove influential points from the 'data' based on the influential points identified
> model2_data_clean <- data[-influential_points_model2, ]
> 
> # Refit Model 2 without influential points (Model 22)
> model22 <- lm(deltacons19 ~ deltaincome19 * totmort19_deflated + deltaincome19 * totmort17_deflated, data = model2_data_clean)
> 
> # Summary of Model 22
> summary(model22)

Call:
lm(formula = deltacons19 ~ deltaincome19 * totmort19_deflated + 
    deltaincome19 * totmort17_deflated, data = model2_data_clean)

Residuals:
    Min      1Q  Median      3Q     Max 
-483235   -7916    -505    7528  299780 

Coefficients:
                                   Estimate Std. Error t value Pr(>|t|)    
(Intercept)                       7.507e+02  2.592e+02   2.897  0.00378 ** 
deltaincome19                     2.556e-02  4.757e-03   5.373 7.98e-08 ***
totmort19_deflated                3.545e-02  3.498e-03  10.135  < 2e-16 ***
totmort17_deflated               -3.302e-02  3.574e-03  -9.238  < 2e-16 ***
deltaincome19:totmort19_deflated  1.350e-07  4.474e-08   3.016  0.00257 ** 
deltaincome19:totmort17_deflated -1.429e-07  4.481e-08  -3.189  0.00143 ** 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 20340 on 7821 degrees of freedom
  (3525 observations deleted due to missingness)
Multiple R-squared:  0.02306,	Adjusted R-squared:  0.02244 
F-statistic: 36.92 on 5 and 7821 DF,  p-value: < 2.2e-16
