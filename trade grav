> file_path <- "C:\\Users\\2022\\Desktop\\gravity\\Gravity_V202211.csv"
> 
> # Load the data
> gravity_data <- read_csv(file_path)


> install.packages("readr")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/2022/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/readr_2.1.5.zip'
Content type 'application/zip' length 1191713 bytes (1.1 MB)
downloaded 1.1 MB

package ‘readr’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\2022\AppData\Local\Temp\RtmpOOBMsj\downloaded_packages
> library(readr)
Warning message:
package ‘readr’ was built under R version 4.3.3 
> file_path <- "C:\\Users\\2022\\Desktop\\gravity\\Gravity_V202211.csv"
> gravity_data <- read_csv(file_path)
Rows: 4699296 Columns: 87                                                                                                                       
── Column specification ─────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr (17): country_id_o, country_id_d, iso3_o, iso3_d, main_city_source_o, main_city_source_d, legal_old_o...
dbl (58): year, iso3num_o, iso3num_d, country_exists_o, country_exists_d, gmt_offset_2020_o, gmt_offset_2...
lgl (12): distw_harmonic_jh, distw_arithmetic_jh, entry_cost_o, entry_cost_d, entry_proc_o, entry_proc_d,...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Warning message:
One or more parsing issues, call `problems()` on your data frame for details, e.g.:
  dat <- vroom(...)
  problems(dat) 
> print(file_path)
[1] "C:\\Users\\2022\\Desktop\\gravity\\Gravity_V202211.csv"
> 
> View(gravity_data)
> View(gravity_data)
> View(gravity_data)
View(gravity_data)




 install.packages("readr")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/2022/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/readr_2.1.5.zip'
Content type 'application/zip' length 1191713 bytes (1.1 MB)
downloaded 1.1 MB

package ‘readr’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\2022\AppData\Local\Temp\RtmpcFg5ZK\downloaded_packages
> library(readr)
Warning message:
package ‘readr’ was built under R version 4.3.3 
> file_path <- "C:\\Users\\2022\\Desktop\\gravity\\Gravity_V202211.csv"
> gravity_data <- read_csv(file_path)
Rows: 4699296 Columns: 87                                                                                                                       
── Column specification ─────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr (17): country_id_o, country_id_d, iso3_o, iso3_d, main_city_source_o, main_city_source_d, legal_old_o...
dbl (58): year, iso3num_o, iso3num_d, country_exists_o, country_exists_d, gmt_offset_2020_o, gmt_offset_2...
lgl (12): distw_harmonic_jh, distw_arithmetic_jh, entry_cost_o, entry_cost_d, entry_proc_o, entry_proc_d,...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Warning message:
One or more parsing issues, call `problems()` on your data frame for details, e.g.:
  dat <- vroom(...)
  problems(dat) 
> colnames(gravity_data)
 [1] "year"                   "country_id_o"           "country_id_d"           "iso3_o"                
 [5] "iso3_d"                 "iso3num_o"              "iso3num_d"              "country_exists_o"      
 [9] "country_exists_d"       "gmt_offset_2020_o"      "gmt_offset_2020_d"      "distw_harmonic"        
[13] "distw_arithmetic"       "distw_harmonic_jh"      "distw_arithmetic_jh"    "dist"                  
[17] "main_city_source_o"     "main_city_source_d"     "distcap"                "contig"                
[21] "diplo_disagreement"     "scaled_sci_2021"        "comlang_off"            "comlang_ethno"         
[25] "comcol"                 "col45"                  "legal_old_o"            "legal_old_d"           
[29] "legal_new_o"            "legal_new_d"            "comleg_pretrans"        "comleg_posttrans"      
[33] "transition_legalchange" "comrelig"               "heg_o"                  "heg_d"                 
[37] "col_dep_ever"           "col_dep"                "col_dep_end_year"       "col_dep_end_conflict"  
[41] "empire"                 "sibling_ever"           "sibling"                "sever_year"            
[45] "sib_conflict"           "pop_o"                  "pop_d"                  "gdp_o"                 
[49] "gdp_d"                  "gdpcap_o"               "gdpcap_d"               "pop_source_o"          
[53] "pop_source_d"           "gdp_source_o"           "gdp_source_d"           "gdp_ppp_o"             
[57] "gdp_ppp_d"              "gdpcap_ppp_o"           "gdpcap_ppp_d"           "pop_pwt_o"             
[61] "pop_pwt_d"              "gdp_ppp_pwt_o"          "gdp_ppp_pwt_d"          "gatt_o"                
[65] "gatt_d"                 "wto_o"                  "wto_d"                  "eu_o"                  
[69] "eu_d"                   "fta_wto"                "fta_wto_raw"            "rta_coverage"          
[73] "rta_type"               "entry_cost_o"           "entry_cost_d"           "entry_proc_o"          
[77] "entry_proc_d"           "entry_time_o"           "entry_time_d"           "entry_tp_o"            
[81] "entry_tp_d"             "tradeflow_comtrade_o"   "tradeflow_comtrade_d"   "tradeflow_baci"        
[85] "manuf_tradeflow_baci"   "tradeflow_imf_o"        "tradeflow_imf_d"       
> install.packages("ggplot2")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/2022/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/ggplot2_3.5.1.zip'
Content type 'application/zip' length 4963551 bytes (4.7 MB)
downloaded 4.7 MB

package ‘ggplot2’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\2022\AppData\Local\Temp\RtmpcFg5ZK\downloaded_packages
> install.packages("reshape2")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/2022/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
also installing the dependency ‘plyr’

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/plyr_1.8.9.zip'
Content type 'application/zip' length 1167809 bytes (1.1 MB)
downloaded 1.1 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/reshape2_1.4.4.zip'
Content type 'application/zip' length 459941 bytes (449 KB)
downloaded 449 KB

package ‘plyr’ successfully unpacked and MD5 sums checked
package ‘reshape2’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\2022\AppData\Local\Temp\RtmpcFg5ZK\downloaded_packages
> install.packages("viridis")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/2022/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/viridis_0.6.5.zip'
Content type 'application/zip' length 3015772 bytes (2.9 MB)
downloaded 2.9 MB

package ‘viridis’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\2022\AppData\Local\Temp\RtmpcFg5ZK\downloaded_packages
> 
> library(viridis)
Loading required package: viridisLite
Warning message:
package ‘viridis’ was built under R version 4.3.3 
> library(ggplot2)
Keep up to date with changes at https://tidyverse.org/blog/
Warning message:
package ‘ggplot2’ was built under R version 4.3.3 
> library(reshape2)
Warning message:
package ‘reshape2’ was built under R version 4.3.3 
> 
> # Assuming gravity_data is your data frame
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "MEX", select = scaled_sci_2021)
> 
> # View the result
> print(result)
# A tibble: 74 × 1
   scaled_sci_2021
             <dbl>
 1           11901
 2           11901
 3           11901
 4           11901
 5           11901
 6           11901
 7           11901
 8           11901
 9           11901
10           11901
# ℹ 64 more rows
# ℹ Use `print(n = ...)` to see more rows
> 
> View(result)
> result <- subset(gravity_data, iso3_o == "CAN" & iso3_d == "USA", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "CAN" & iso3_d == "FRA", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "CAN" & iso3_d == "POL", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "POL" & iso3_d == "DEU", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "POL" & iso3_d == "FRA", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "FRA" & iso3_d == "GER", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "FRA" & iso3_d == "ITA", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "FRA" & iso3_d == "BGR", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "ZBW", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "IND", select = scaled_sci_2021)
> View(result)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "ITA", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "POL", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "POL" & iso3_d == "UKR", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "EGY", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "CAN" & iso3_d == "EGY", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "JPN", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "PHI", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "UZB", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "KYR", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "BRA", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "POR", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "PRT" & iso3_d == "BRA", select = scaled_sci_2021)
> result <- subset(gravity_data, iso3_o == "USA" & iso3_d == "PRT", select = scaled_sci_2021)
> # Install necessary packages if not already installed
> install.packages("igraph")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/2022/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/igraph_2.1.2.zip'
Content type 'application/zip' length 7296066 bytes (7.0 MB)
downloaded 7.0 MB

package ‘igraph’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\2022\AppData\Local\Temp\RtmpcFg5ZK\downloaded_packages
> install.packages("ggraph")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/2022/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
also installing the dependencies ‘tweenr’, ‘polyclip’, ‘RcppArmadillo’, ‘ggforce’, ‘ggrepel’, ‘tidygraph’, ‘graphlayouts’


  There is a binary version available but the source version is later:
                binary   source needs_compilation
RcppArmadillo 14.0.2-1 14.2.2-1              TRUE

  Binaries will be installed
trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/tweenr_2.0.3.zip'
Content type 'application/zip' length 545730 bytes (532 KB)
downloaded 532 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/polyclip_1.10-7.zip'
Content type 'application/zip' length 396970 bytes (387 KB)
downloaded 387 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/RcppArmadillo_14.0.2-1.zip'
Content type 'application/zip' length 2045714 bytes (2.0 MB)
downloaded 2.0 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/ggforce_0.4.2.zip'
Content type 'application/zip' length 2180239 bytes (2.1 MB)
downloaded 2.1 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/ggrepel_0.9.6.zip'
Content type 'application/zip' length 622715 bytes (608 KB)
downloaded 608 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/tidygraph_1.3.1.zip'
Content type 'application/zip' length 640991 bytes (625 KB)
downloaded 625 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/graphlayouts_1.2.1.zip'
Content type 'application/zip' length 2683747 bytes (2.6 MB)
downloaded 2.6 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/ggraph_2.2.1.zip'
Content type 'application/zip' length 4589369 bytes (4.4 MB)
downloaded 4.4 MB

package ‘tweenr’ successfully unpacked and MD5 sums checked
package ‘polyclip’ successfully unpacked and MD5 sums checked
package ‘RcppArmadillo’ successfully unpacked and MD5 sums checked
package ‘ggforce’ successfully unpacked and MD5 sums checked
package ‘ggrepel’ successfully unpacked and MD5 sums checked
package ‘tidygraph’ successfully unpacked and MD5 sums checked
package ‘graphlayouts’ successfully unpacked and MD5 sums checked
package ‘ggraph’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\2022\AppData\Local\Temp\RtmpcFg5ZK\downloaded_packages
> # Load libraries
> library(igraph)

Attaching package: ‘igraph’

The following objects are masked from ‘package:stats’:

    decompose, spectrum

The following object is masked from ‘package:base’:

    union

Warning message:
package ‘igraph’ was built under R version 4.3.3 
> library(ggraph)
Warning message:
package ‘ggraph’ was built under R version 4.3.3 
> 
> # Create a data frame with the data provided
> data <- data.frame(
+     iso3_o = c("USA", "USA", "CAN", "CAN", "POL", "POL", "FRA", "FRA", "USA", "USA", 
+                "CAN", "USA", "USA", "CAN", "USA", "USA", "PRT"),
+     iso3_d = c("MEX", "CAN", "FRA", "POL", "ITA", "ITA", "GBR", "ITA", "IND", "ITA", 
+                "EGY", "JPN", "BRA", "BRA", "BRA", "USA", "BRA"),
+     scaled_sci_21 = c(11901, 12209, 9097, 2133, 3123, 11280, 7453, 3123, 955, 3064, 
+                       1345, 978, 2731, 1697, 33146, 3430)
+ )
Error in data.frame(iso3_o = c("USA", "USA", "CAN", "CAN", "POL", "POL",  : 
  arguments imply differing number of rows: 17, 16
> # Create a data frame with 16 entries (matching your country pairs)
> data <- data.frame(
+     iso3_o = c("USA", "USA", "CAN", "CAN", "POL", "POL", "FRA", "FRA", "USA", "USA", 
+                "CAN", "USA", "USA", "CAN", "USA", "USA"),
+     iso3_d = c("MEX", "CAN", "FRA", "POL", "ITA", "ITA", "GBR", "ITA", "IND", "ITA", 
+                "EGY", "JPN", "BRA", "BRA", "BRA", "USA"),
+     scaled_sci_21 = c(11901, 12209, 9097, 2133, 3123, 11280, 7453, 3123, 955, 3064, 
+                       1345, 978, 2731, 1697, 33146, 3430)
+ )
> 
> # Check the data
> print(data)
   iso3_o iso3_d scaled_sci_21
1     USA    MEX         11901
2     USA    CAN         12209
3     CAN    FRA          9097
4     CAN    POL          2133
5     POL    ITA          3123
6     POL    ITA         11280
7     FRA    GBR          7453
8     FRA    ITA          3123
9     USA    IND           955
10    USA    ITA          3064
11    CAN    EGY          1345
12    USA    JPN           978
13    USA    BRA          2731
14    CAN    BRA          1697
15    USA    BRA         33146
16    USA    USA          3430
> 
> # Create a data frame with corrected data (17 values for scaled_sci_21)
> data <- data.frame(
+     iso3_o = c("USA", "USA", "CAN", "CAN", "POL", "FRA", "FRA", "USA", "USA", "USA"
+                "USA", "CAN", "USA", "USA", "PRT", "PRT"),
Error: unexpected string constant in:
"    iso3_o = c("USA", "USA", "CAN", "CAN", "POL", "FRA", "FRA", "USA", "USA", "USA"
               "USA""
> data <- data.frame(
+ iso3_o = c("USA", "USA", "CAN", "CAN", "POL", "FRA", "FRA", "USA", "USA", 
+ "USA", "USA", "CAN", "USA", "USA", "PRT","PRT"),
+ iso3_d = c("MEX", "CAN", "FRA", "POL", "ITA", "ITA", "GBR", "IND", "ITA", "POL",
+ "EGY", "EGY", JPN", "BRA", "BRA", "USA"),
Error: unexpected string constant in:
"iso3_d = c("MEX", "CAN", "FRA", "POL", "ITA", "ITA", "GBR", "IND", "ITA", "POL",
"EGY", "EGY", JPN", ""
> # Correct data frame with the provided country pairs and values
> data <- data.frame(
+     iso3_o = c("USA", "USA", "CAN", "CAN", "POL", "FRA", "FRA", "USA", "USA", 
+                "USA", "USA", "CAN", "USA", "USA", "PRT", "PRT"),
+     iso3_d = c("MEX", "CAN", "FRA", "POL", "ITA", "ITA", "GBR", "IND", "ITA", 
+                "POL", "EGY", "EGY", "JPN", "BRA", "BRA", "USA"),
+     scaled_sci_21 = c(11901, 12209, 9097, 2133, 3123, 11280, 7453, 955, 3064, 
+                       1345, 978, 1901, 2731, 1697, 33146, 3430)
+ )
> 
> # Check the data to ensure it is correct
> print(data)
   iso3_o iso3_d scaled_sci_21
1     USA    MEX         11901
2     USA    CAN         12209
3     CAN    FRA          9097
4     CAN    POL          2133
5     POL    ITA          3123
6     FRA    ITA         11280
7     FRA    GBR          7453
8     USA    IND           955
9     USA    ITA          3064
10    USA    POL          1345
11    USA    EGY           978
12    CAN    EGY          1901
13    USA    JPN          2731
14    USA    BRA          1697
15    PRT    BRA         33146
16    PRT    USA          3430
> 
> edges <- data.frame(from = data$iso3_o, to = data$iso3_d, weight = data$scaled_sci_21)
> 
> # Create the graph object
> graph <- graph_from_data_frame(edges, directed = FALSE)
> 
> # Plot the network graph
> ggraph(graph, layout = "fr") +
+     geom_edge_link(aes(edge_width = weight), alpha = 0.6, color = "blue") +
+     geom_node_point(color = "red", size = 5) +
+     geom_node_text(aes(label = name), vjust = 1.5, size = 4, color = "black") +
+     theme_void() +
+     ggtitle("Social Connectedness (SCI) Network Between Countries") +
+     theme(legend.position = "none")
Warning message:
The `trans` argument of `continuous_scale()` is deprecated as of ggplot2 3.5.0.
ℹ Please use the `transform` argument instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. 
> # Load necessary libraries
> library(igraph)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:igraph’:

    as_data_frame, groups, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 4.3.3 
> 
> # Define the list of countries
> countries <- c("USA", "MEX", "CAN", "FRA", "POL", "ITA", "GBR", "IND", "JPN", "BRA", 
+                "EGY", "PRT", "UKR", "PHI", "UZB", "KYR")
> 
> # Subset the gravity_data for only the relevant country pairs
> filtered_data <- gravity_data %>%
+     filter(iso3_o %in% countries & iso3_d %in% countries) %>%
+     select(iso3_o, iso3_d, scaled_sci_2021)
> 
> # Check the subsetted data
> print(filtered_data)
# A tibble: 14,504 × 3
   iso3_o iso3_d scaled_sci_2021
   <chr>  <chr>            <dbl>
 1 BRA    BRA             689508
 2 BRA    BRA             689508
 3 BRA    BRA             689508
 4 BRA    BRA             689508
 5 BRA    BRA             689508
 6 BRA    BRA             689508
 7 BRA    BRA             689508
 8 BRA    BRA             689508
 9 BRA    BRA             689508
10 BRA    BRA             689508
# ℹ 14,494 more rows
# ℹ Use `print(n = ...)` to see more rows
> 
> # Create a graph object from the data
> network <- graph_from_data_frame(filtered_data, directed = FALSE)
> 
> # Plot the network
> plot(
+     network,
+     edge.width = E(network)$scaled_sci_2021 / 1000,  # Scale edge thickness
+     vertex.size = 8,  # Size of nodes
+     vertex.label = V(network)$name,  # Add country names as labels
+     vertex.color = "lightblue",  # Color for nodes
+     main = "Social Connectedness Network"
+ )
Error in xspline(x = c(c.x1[i], spx[i], c.x2[i]), y = c(c.y1[i], spy[i],  : 
  plot.new has not been called yet
> plot.new()  # Ensure a new plotting window is open
> plot(
+     network,
+     edge.width = E(network)$scaled_sci_2021 / 1000,  # Scale edge thickness
+     vertex.size = 8,  # Size of nodes
+     vertex.label = V(network)$name,  # Add country names as labels
+     vertex.color = "lightblue",  # Color for nodes
+     main = "Social Connectedness Network"
+ )
> 
> install.packages("plot")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/2022/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
Warning in install.packages :
  package ‘plot’ is not available for this version of R

A version of this package for your version of R might be available elsewhere,
see the ideas at
https://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages
> plot(1:10, 1:10, main = "Example Plot", xlab = "X-axis", ylab = "Y-axis")
> 
> print(network)  # Inspect the igraph object
IGRAPH 2fe9bcf UN-- 14 14504 -- 
+ attr: name (v/c), scaled_sci_2021 (e/n)
+ edges from 2fe9bcf (vertex names):
 [1] BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA
[12] BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA
[23] BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA
[34] BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA
[45] BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA
[56] BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA
[67] BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--BRA BRA--CAN BRA--CAN BRA--CAN
[78] BRA--CAN BRA--CAN BRA--CAN BRA--CAN BRA--CAN BRA--CAN BRA--CAN BRA--CAN BRA--CAN BRA--CAN BRA--CAN
+ ... omitted several edges
> 
> plot(
+     network,
+     layout = layout_with_fr(network),  # Specify layout
+     edge.width = E(network)$scaled_sci_2021 / 1000,  # Edge thickness
+     vertex.size = 8,  # Node size
+     vertex.label = V(network)$name,  # Country names as labels
+     vertex.color = "lightblue",  # Node color
+     main = "Social Connectedness Network"
+ )
> 
> network <- simplify(network, remove.multiple = TRUE, remove.loops = TRUE)
> 
> layout_positions <- layout_with_fr(network)
> 
> # Plot with the calculated positions
> plot(
+     network,
+     layout = layout_positions,
+     edge.width = E(network)$scaled_sci_2021 / 1000,
+     vertex.size = 8,
+     vertex.label = V(network)$name,
+     vertex.color = "lightblue",
+     main = "Social Connectedness Network"
+ )
> # Load necessary libraries
library(igraph)
library(RColorBrewer)

# Create bins for scaled_sci_2021 (by 10,000)
breaks <- seq(0, max(E(network)$scaled_sci_2021), by = 10000)
edge_bins <- cut(E(network)$scaled_sci_2021, breaks = breaks, include.lowest = TRUE, labels = FALSE)

# Map each bin to a color using a color palette
color_palette <- colorRampPalette(brewer.pal(9, "YlOrRd"))(length(breaks) - 1)
edge_colors <- color_palette[edge_bins]

# Assign edge width based on the scaled_sci_2021 value (binned)
edge_width <- as.numeric(cut(E(network)$scaled_sci_2021, breaks = breaks, include.lowest = TRUE)) * 0.5 + 1

# Plot the network
plot(
    network,
    edge.color = edge_colors,        # Use color mapping based on bin
    edge.width = edge_width,         # Adjust edge width based on scaled_sci_2021
    vertex.size = 5,                 # Adjust vertex size
    vertex.label.cex = 0.8,          # Adjust label size
    layout = layout_with_fr,         # Force-directed layout for better distribution
    main = "Network of Social Connectedness (2021)"
)

> filtered_data <- distinct(filtered_data)
> 
> library(igraph)
> 
> network <- graph_from_data_frame(filtered_data, directed = FALSE)
> 
> # Define the color gradient
> edge_colors <- colorRampPalette(c("lightblue", "blue", "darkblue"))(100)
> 
> # Scale the attribute values to match the color gradient
> scaled_sci_values <- E(network)$scaled_sci_2021
> min_val <- min(scaled_sci_values, na.rm = TRUE)
> max_val <- max(scaled_sci_values, na.rm = TRUE)
> 
> # Map values to indices in the color gradient
> scaled_indices <- round(99 * (scaled_sci_values - min_val) / (max_val - min_val)) + 1
> edge_color_mapping <- edge_colors[scaled_indices]
> 
> # Plot the graph
> plot(
+     network,
+     layout = layout_with_fr(network),
+     edge.color = edge_color_mapping,
+     edge.width = E(network)$scaled_sci_2021 / 1000,
+     vertex.size = 8,
+     vertex.label = V(network)$name,
+     vertex.color = "lightblue",
+     main = "Social Connectedness Network"
+ )
> 
> network <- simplify(network, remove.multiple = TRUE, remove.loops = TRUE)
> 
> layout <- layout_with_fr(network)
> 
> plot(
+     network,
+     layout = layout,
+     edge.color = edge_color_mapping,
+     edge.width = E(network)$scaled_sci_2021 / 10000,  # Reduce edge width
+     vertex.size = degree(network) + 5,  # Node size based on degree
+     vertex.label.cex = 0.7,             # Reduce label size
+     vertex.label.color = "black",       # Make labels easier to read
+     vertex.color = "lightblue",
+     main = "Social Connectedness Network"
+ )
> 
> # Filter edges with high scaled_sci_2021 values
> high_strength_edges <- E(network)[scaled_sci_2021 > quantile(scaled_sci_2021, 0.75)]
Error: object 'scaled_sci_2021' not found
> # Remove duplicates
> filtered_data <- distinct(filtered_data)
> 
> # Create the graph and add the edge attributes
> network <- graph_from_data_frame(filtered_data, directed = FALSE)
> 
> # Now check if scaled_sci_2021 exists as an edge attribute
> print(E(network)$scaled_sci_2021)
  [1]   689508     1617      955     1360     1718      287     2469     1866     1603      302    33146
 [12]       NA      302     1697       NA      221     1617  1353784     1901     9097    12407     3900
 [23]     4385     3064     2805     2133    10476       NA     2274    12209       NA      678      955
 [34]     1901  1137660     1306     1301      400     3215      238      633      427      581       NA
 [45]     1676      978       NA      844     1360     9097     1306   628575     7428      266    11280
 [56]     1643      770     3123    47926       NA     2186     2133       NA      497     1718    12407
 [67]     1301     7428   904241     1615    14424     1960      562    27417    30796       NA     2222
 [78]     6261       NA      760      287     3900      400      266     1615   160174      500      309
 [89]      202      184      801       NA      330      955       NA      353     2469     4385     3215
[100]    11280    14424      500  1977645     1717     1041     4850    10043       NA     9139     3064
[111]       NA      690     1866     3064      238     1643     1960      309     1717   676752      362
[122]      492     1379       NA      401     2731       NA     1285     1603     2805      633      770
[133]      562      202     1041      362   520356      277     1059       NA      312    11901       NA
[144]      200      302     2133      427     3123    27417      184     4850      492      277  2283798
[155]     3560       NA    38753     1345       NA     1343    33146    10476      581    47926    30796
[166]      801    10043     1379     1059     3560 10221008       NA     6008     3430       NA      895
[177]       NA      302       NA     2274       NA     1676       NA     2186       NA     2222       NA
[188]      330       NA     9139       NA      401       NA      312       NA    38753       NA     6008
[199]       NA  1740032       NA     1360       NA    13159     1697    12209      978     2133     6261
[210]      955     3064     2731    11901     1345     3430       NA     1360   249673       NA     1044
[221]       NA      221       NA      678       NA      844       NA      497       NA      760       NA
[232]      353       NA      690       NA     1285       NA      200       NA     1343       NA      895
[243]       NA    13159       NA     1044       NA  5024147
> 
> # Filter edges with high scaled_sci_2021 values
> high_strength_edges <- E(network)[scaled_sci_2021 > quantile(E(network)$scaled_sci_2021, 0.75)]
Error in quantile.default(E(network)$scaled_sci_2021, 0.75) : 
  missing values and NaN's not allowed if 'na.rm' is FALSE
> # Filter edges with high scaled_sci_2021 values (ignore NAs)
> high_strength_edges <- E(network)[scaled_sci_2021 > quantile(E(network)$scaled_sci_2021, 0.75, na.rm = TRUE)]
Error in simple_es_index(x, ii) : Unknown edge selected
> # Check the number of edges
> length(E(network))
[1] 248
> 
> # List edge attributes to verify that scaled_sci_2021 exists
> list.edge.attributes(network)
[1] "scaled_sci_2021"
Warning message:
`list.edge.attributes()` was deprecated in igraph 2.0.0.
ℹ Please use `edge_attr_names()` instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. 
> 
> # List edge attributes to verify that scaled_sci_2021 exists
> edge_attr_names(network)
[1] "scaled_sci_2021"
> 
> # Normalize scaled_sci_2021 values to range from 0 to 1
> normalized_weights <- (E(sub_network)$scaled_sci_2021 - min(E(sub_network)$scaled_sci_2021)) /
+     (max(E(sub_network)$scaled_sci_2021) - min(E(sub_network)$scaled_sci_2021))
Error: object 'sub_network' not found
> # Plot the filtered subgraph
> plot(
+     sub_network,
+     layout = layout_with_fr(sub_network),  # Fruchterman-Reingold layout
+     edge.color = "blue",  # Customize edge color
+     edge.width = E(sub_network)$scaled_sci_2021 / 10000,  # Scale edge width
+     vertex.size = degree(sub_network) + 5,  # Size vertices by degree
+     vertex.label.cex = 0.8,  # Adjust label size
+     vertex.color = "lightgreen",  # Color vertices
+     main = "Filtered High-Strength Connections"
+ )
Error: object 'sub_network' not found
> # Filter edges with high scaled_sci_2021 values
> high_strength_edges <- E(network)[scaled_sci_2021 > quantile(E(network)$scaled_sci_2021, 0.75, na.rm = TRUE)]
Error in simple_es_index(x, ii) : Unknown edge selected
> # Filter edges with high scaled_sci_2021 values
> high_strength_edges <- E(network)[scaled_sci_2021 > quantile(E(network)$scaled_sci_2021, 0.75, na.rm = TRUE)]
Error in simple_es_index(x, ii) : Unknown edge selected
> # Check first few edges to ensure they exist
> head(E(network))
+ 6/248 edges from 630b1c4 (vertex names):
[1] BRA--BRA BRA--CAN BRA--EGY BRA--FRA BRA--GBR BRA--IND
> 
> # Remove self-loops and duplicate edges
> network <- simplify(network, remove.loops = TRUE)
> 
> # Remove duplicate edges
> network <- simplify(network, remove.multiple = TRUE)
> 
> # Reassign the scaled_sci_2021 edge attribute
> E(network)$scaled_sci_2021 <- filtered_data$scaled_sci_2021
Error in i_set_edge_attr(x, attr(value, "name"), index = value, value = attr(value,  : 
  Length of new attribute value must be 1 or 91, the number of target edges, not 248
> length(filtered_data$scaled_sci_2021)
[1] 248
> 
> length(E(network))  # Number of edges in the network
[1] 91
> 
> # Extract the pairs of iso3_o and iso3_d from the edges in the network
> edge_pairs <- data.frame(
+     iso3_o = as.character(ends(network, E(network))[, 1]),
+     iso3_d = as.character(ends(network, E(network))[, 2])
+ )
> 
> # Merge the edge pairs with filtered_data to get corresponding scaled_sci_2021 values
> edge_data <- merge(edge_pairs, filtered_data, by = c("iso3_o", "iso3_d"))
> 
> # Check if merge worked and ensure you have the correct number of rows
> head(edge_data)
  iso3_o iso3_d scaled_sci_2021
1    BRA    CAN            1617
2    BRA    EGY             955
3    BRA    FRA            1360
4    BRA    GBR            1718
5    BRA    IND             287
6    BRA    ITA            2469
> 
> # Assign the scaled_sci_2021 values to the network edges
> E(network)$scaled_sci_2021 <- edge_data$scaled_sci_2021
Error in i_set_edge_attr(x, attr(value, "name"), index = value, value = attr(value,  : 
  Length of new attribute value must be 1 or 91, the number of target edges, not 116
> # Remove duplicates from edge_data to ensure one value per edge
> edge_data_unique <- edge_data %>%
+     distinct(iso3_o, iso3_d, .keep_all = TRUE)
> 
> # Check if the number of rows now matches the number of edges in the network
> nrow(edge_data_unique)  # Should be 91
[1] 91
> 
> # Ensure the order of rows in edge_data_unique matches the order of edges in the network
> E(network)$scaled_sci_2021 <- edge_data_unique$scaled_sci_2021
> 
> # Verify if the edge attribute has been correctly assigned
> head(E(network)$scaled_sci_2021)
[1] 1617  955 1360 1718  287 2469
> 
> # Load necessary libraries if not done already
> library(igraph)
> library(RColorBrewer)
> 
> # Set a color palette for the edges
> color_palette <- colorRampPalette(brewer.pal(9, "YlOrRd"))(100)
> 
> # Normalize scaled_sci_2021 values to map them to the color scale
> edge_values <- E(network)$scaled_sci_2021
> norm_values <- (edge_values - min(edge_values)) / (max(edge_values) - min(edge_values))  # Normalization
> 
> # Map the normalized values to colors
> edge_colors <- color_palette[round(norm_values * 99) + 1]  # Map to color range
> 
> # Plot the network
> plot(network, 
+      edge.color = edge_colors,          # Color edges by scaled_sci_2021
+      edge.width = 2,                    # Set edge width for better visibility
+      vertex.size = 5,                   # Adjust vertex size
+      vertex.label.cex = 0.8,            # Adjust label size
+      layout = layout_with_fr,           # Force-directed layout
+      main = "Network of Social Connectedness (2021)"
+ )
> 
> # Set vertex labels as iso3_o and iso3_d pairs
> V(network)$label <- paste(V(network)$name, collapse = "-")
> 
> # Plot with labels
> plot(network, 
+      edge.color = edge_colors,           # Color edges by scaled_sci_2021
+      edge.width = 2,                     # Set edge width
+      vertex.size = 5,                    # Set vertex size
+      vertex.label.cex = 0.8,             # Label size
+      vertex.label.color = "black",       # Label color
+      vertex.label.dist = 1.5,            # Distance from vertex to label
+      layout = layout_with_fr,            # Force-directed layout
+      main = "Social Connectedness Network"
+ )
> 
> # Install the visNetwork package if not already installed
> install.packages("visNetwork")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/2022/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
also installing the dependency ‘htmlwidgets’

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/htmlwidgets_1.6.4.zip'
Content type 'application/zip' length 812966 bytes (793 KB)
downloaded 793 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/visNetwork_2.1.2.zip'
Content type 'application/zip' length 4703986 bytes (4.5 MB)
downloaded 4.5 MB

package ‘htmlwidgets’ successfully unpacked and MD5 sums checked
package ‘visNetwork’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\2022\AppData\Local\Temp\RtmpcFg5ZK\downloaded_packages
> library(visNetwork)
Warning message:
package ‘visNetwork’ was built under R version 4.3.3 
> 
> # Convert the igraph object to visNetwork format
> vis_network <- toVisNetworkData(network)
> 
> # Create the interactive plot
> visNetwork(vis_network$nodes, vis_network$edges) %>%
+     visEdges(color = list(color = edge_colors)) %>%
+     visNodes(size = 10) %>%
+     visOptions(highlightNearest = TRUE)
























# Load necessary libraries
library(igraph)
library(RColorBrewer)

# Create bins for scaled_sci_2021 (by 10,000)
breaks <- seq(0, max(E(network)$scaled_sci_2021), by = 10000)
edge_bins <- cut(E(network)$scaled_sci_2021, breaks = breaks, include.lowest = TRUE, labels = FALSE)

# Map each bin to a color using a color palette
color_palette <- colorRampPalette(brewer.pal(9, "YlOrRd"))(length(breaks) - 1)
edge_colors <- color_palette[edge_bins]

# Assign edge width based on the scaled_sci_2021 value (binned)
edge_width <- as.numeric(cut(E(network)$scaled_sci_2021, breaks = breaks, include.lowest = TRUE)) * 0.5 + 1

# Plot the network
plot(
    network,
    edge.color = edge_colors,        # Use color mapping based on bin
    edge.width = edge_width,         # Adjust edge width based on scaled_sci_2021
    vertex.size = 5,                 # Adjust vertex size
    vertex.label.cex = 0.8,          # Adjust label size
    layout = layout_with_fr,         # Force-directed layout for better distribution
    main = "Network of Social Connectedness (2021)"
)
# Load necessary libraries
library(igraph)
library(RColorBrewer)

# Create bins for scaled_sci_2021 (by 10,000)
breaks <- seq(0, max(E(network)$scaled_sci_2021), by = 10000)
edge_bins <- cut(E(network)$scaled_sci_2021, breaks = breaks, include.lowest = TRUE, labels = FALSE)

# Map each bin to a color using a color palette
color_palette <- colorRampPalette(brewer.pal(9, "YlOrRd"))(length(breaks) - 1)
edge_colors <- color_palette[edge_bins]

# Assign edge width based on the scaled_sci_2021 value (binned)
edge_width <- as.numeric(cut(E(network)$scaled_sci_2021, breaks = breaks, include.lowest = TRUE)) * 0.5 + 1

# Plot the network
plot(
    network,
    edge.color = edge_colors,        # Use color mapping based on bin
    edge.width = edge_width,         # Adjust edge width based on scaled_sci_2021
    vertex.size = 5,                 # Adjust vertex size
    vertex.label.cex = 0.8,          # Adjust label size
    layout = layout_with_fr,         # Force-directed layout for better distribution
    main = "Network of Social Connectedness (2021)"
